#!/bin/bash
#
# Copyright © 2014 Jesse 'Jeaye' Wilkerson
# See licensing in LICENSE file, or at:
#   http://www.opensource.org/licenses/MIT
#
# File: configure
# Author: Jesse 'Jeaye' Wilkerson

# Re-invoke the configure script
# and keep the output at bay.
if [ "$1" != "quiet" ];
then
  $0 "quiet" $@ > /dev/null
  exit $?
fi

# Exit on errors
set -o errexit
# Exit if we try to use an unbound variable
set -o nounset

# Determine system
UNAME_LINUX=0
UNAME_CYGWIN=0
UNAME_OSX=0
UNAME=$(uname)
if [ "$UNAME" = "Linux" ];
then
  UNAME_LINUX=1
elif [ "$UNAME" = "Darwin" ];
then
  UNAME_OSX=1
elif [ "$(uname -o)" = "Cygwin" ];
then
  UNAME_CYGWIN=1
else
  echo "Invalid uname ($UNAME): Unsuppported platform" 1>&2
  exit 1
fi

# Colors
COLOR_OFF="$(tput sgr0)"
COLOR_RED="$(tput setaf 1)"
COLOR_YELLOW="$(tput setaf 3)"
COLOR_GREEN="$(tput setaf 2)"

# Output colorizing
ECHO_PREFIX=$COLOR_GREEN"»»»"$COLOR_OFF
if [ "$UNAME" = "Linux" ];
then
  ECHO="echo -e $ECHO_PREFIX"
else
  ECHO="echo $ECHO_PREFIX"
fi

log() { $ECHO "$@" 1>&2; }
log_start() { printf "$ECHO_PREFIX $@" 1>&2; }
log_end() { echo "$@" 1>&2; }

PROJECT=stdman
log "Configuring ${PROJECT}"

PREFIX=/usr/local
DATAROOTDIR=$PREFIX/share
MANDIR=$DATAROOTDIR/man
REFERENCE=./reference/en/cpp
TMP_MAN=./man
THREADS=8
CXX_PLATFORM_FLAGS=
LD_PLATFORM_LIBS=
if [ "1" -eq "$UNAME_LINUX" ];
then
  log "Platform: Linux"
elif [ "1" -eq "$UNAME_OSX" ];
then
  log "Platform: OSX"
  CXX_PLATFORM_FLAGS="-stdlib=libc++ -I /opt/local/include"
  LD_PLATFORM_LIBS="-lc++"
elif [ "1" -eq "$UNAME_CYGWIN" ];
then
  log "Platform: Cygwin (NOT TESTED)"
fi

# Parse params
for i in "$@"
do
  case $i in
    --prefix=*)
      PREFIX="${i#*=}"
      DATAROOTDIR=$PREFIX/share
      MANDIR=$DATAROOTDIR/man
      shift
      ;;
    --datarootdir=*)
      DATAROOTDIR="${i#*=}"
      MANDIR=$DATAROOTDIR/man
      shift
      ;;
    --mandir=*)
      MANDIR="${i#*=}"
      shift
      ;;
    --reference=*)
      REFERENCE="${i#*=}"
      shift
      ;;
    --tmp-man=*)
      TMP_MAN="${i#*=}"
      shift
      ;;
    --threads=*)
      THREADS=${i#*=}
      shift
      ;;
    --help*)
      log "Usage: ./configure [OPTION...]"
      log
      log "  --help                              Show this help message"
      log "  --prefix=[/usr/local]               Set installation prefix"
      log "  --datarootdir=[/usr/local/share]    Set data root prefix"
      log "  --mandir=[/usr/local/share/man]     Set man prefix"
      log "  --reference=[./reference/en/cpp]    Set input prefix"
      log "  --tmp-man=[./man]                   Set temporary output prefix"
      log "  --threads=[8]                       Set number of threads to use"
      log
      exit 0
      ;;
    *)
      # Unknown option
      ;;
  esac
done

# Update after params
log
log "Reference location: $REFERENCE"
log "Install prefix: $PREFIX"
log "Install data prefix: $DATAROOTDIR"
log "Install man prefix: $MANDIR"
log "Temporary man location: $TMP_MAN"
log "Generation will be on $THREADS threads"
log

# Update submodules
log "Updating submodules"
git submodule update --recursive --init

# Configure the makefile
log "Populating Makefile"
rm -f Makefile
sed "s#%CXX_PLATFORM_FLAGS_IN%#${CXX_PLATFORM_FLAGS}#" ./Makefile.in > ./Makefile.tmp1
sed "s#%LD_PLATFORM_LIBS_IN%#${LD_PLATFORM_LIBS}#" ./Makefile.tmp1 > ./Makefile.tmp2
sed "s#%PREFIX%#${PREFIX}#" ./Makefile.tmp2 > ./Makefile.tmp1
sed "s#%DATAROOTDIR%#${DATAROOTDIR}#" ./Makefile.tmp1 > ./Makefile.tmp2
sed "s#%MANDIR%#${MANDIR}#" ./Makefile.tmp2 > ./Makefile.tmp1
sed "s#%REFERENCE%#${REFERENCE}#" ./Makefile.tmp1 > ./Makefile.tmp2
sed "s#%TMP_MAN%#${TMP_MAN}#" ./Makefile.tmp2 > ./Makefile.tmp1
sed "s#%THREADS%#${THREADS}#" ./Makefile.tmp1 > ./Makefile
rm -f Makefile.tmp1 Makefile.tmp2

log "Done configuring ${PROJECT}"
log
log "To install, use \`sudo make install\`"
